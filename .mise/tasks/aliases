#!/usr/bin/env ruby
# frozen_string_literal: true
# typed: true
# mise description="Generates aliases for the latest versions of the tools"
require "pathname"
require "semantic"

state = {}

current_directory = Pathname.new(__dir__)
root_directory = current_directory.join("..").realpath

input_directory = root_directory.join("Formula")
input_directory.mkdir(0o700) unless input_directory.exist?

input_directory.entries.each do |file|
  matched = file.basename.to_s.match(/([\S\s]*)@([\S\s]*)\.rb/)
  next unless matched

  name = matched[1]
  next unless name

  version = matched[2]
  next unless version

  semver = Semantic::Version.new(version)

  tool = state[name]
  tool ||= {}

  semver_latest, _, _ = tool[""]
  if semver_latest.nil? || semver_latest < semver
    tool[""] = [
      semver,
      name,
      "#{name}@#{semver}.rb"
    ]
  end

  alias_major = semver.major.to_s
  semver_major, _, _ = tool[alias_major]
  if semver_major.nil? || semver_major < semver
    tool[alias_major] = [
      semver,
      "#{name}@#{alias_major}",
      "#{name}@#{semver}.rb"
    ]
  end

  alias_minor = "#{semver.major}.#{semver.minor}"
  semver_minor, _, _ = tool[alias_minor]
  if semver_minor.nil? || semver_minor < semver
    tool[alias_minor] = [
      semver,
      "#{name}@#{alias_minor}",
      "#{name}@#{semver}.rb"
    ]
  end

  state[name] = tool
end

output_directory = root_directory.join("Aliases")
output_directory.mkdir(0o700) unless output_directory.exist?

state.each do |_, versions|
  versions.each do |_, meta|
    _, output_basename, intput_basename = meta
    output = output_directory.join(output_basename)
    output.delete if output.exist?
    input = input_directory.join(intput_basename)
    relative_input = input.relative_path_from(output_directory)
    output.make_symlink(relative_input)
  end
end
